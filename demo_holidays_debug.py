#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –º–æ–¥—É–ª—è holidays —Å debug-—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é
"""

import sys
import logging
from datetime import datetime, date

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append('.')

class MockMessage:
    """–§–∏–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    def __init__(self, chat_id, thread_id=None, text="test", user_id=12345, username="test_user", first_name="Test", last_name="User"):
        self.chat = MockChat(chat_id)
        self.message_thread_id = thread_id
        self.text = text
        self.from_user = MockUser(user_id, username, first_name, last_name)

class MockChat:
    def __init__(self, chat_id):
        self.id = chat_id

class MockUser:
    def __init__(self, user_id, username="test_user", first_name="Test", last_name="User"):
        self.id = user_id
        self.username = username
        self.first_name = first_name
        self.last_name = last_name

class MockBot:
    """–§–∏–∫—Ç–∏–≤–Ω—ã–π –±–æ—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    def __init__(self):
        self.sent_messages = []
        self.handlers = []
        self.current_message_id = 1000
    
    def send_message(self, chat_id, text, message_thread_id=None, reply_markup=None):
        """–ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        message_id = self.current_message_id
        self.current_message_id += 1
        
        self.sent_messages.append({
            'message_id': message_id,
            'chat_id': chat_id,
            'text': text,
            'thread_id': message_thread_id,
            'reply_markup': reply_markup,
            'timestamp': datetime.now()
        })
        
        print(f"\nüì§ –ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ:")
        print(f"   üí¨ –ß–∞—Ç: {chat_id}")
        print(f"   üßµ –¢–æ–ø–∏–∫: {message_thread_id}")
        print(f"   üìù –¢–µ–∫—Å—Ç: {text}")
        if reply_markup:
            print(f"   üîò –ö–Ω–æ–ø–∫–∏: –î–∞")
        return message_id
    
    def reply_to(self, message, text, reply_markup=None):
        """–ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        return self.send_message(message.chat.id, text, message.message_thread_id, reply_markup)
    
    def edit_message_text(self, text, chat_id, message_id):
        """–ò–º–∏—Ç–∞—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è"""
        print(f"\n‚úèÔ∏è –ë–æ—Ç –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ {message_id}:")
        print(f"   üìù –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç: {text}")
    
    def message_handler(self, **kwargs):
        def decorator(func):
            self.handlers.append(('message', func, kwargs))
            return func
        return decorator
    
    def callback_query_handler(self, **kwargs):
        def decorator(func):
            self.handlers.append(('callback', func, kwargs))
            return func
        return decorator

def demo_holiday_bot():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ holidays"""
    print("üé≠ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –º–æ–¥—É–ª—è holidays —Å debug-—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é\n")
    
    from holidays import register_holiday_handlers
    from holidays_config import HOLIDAYS_CHAT_ID, HOLIDAYS_THREAD_ID, HOLIDAYS_ADMIN_IDS
    
    # –°–æ–∑–¥–∞–µ–º mock-–±–æ—Ç–∞
    mock_bot = MockBot()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    register_holiday_handlers(mock_bot)
    
    print(f"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥—É–ª—è:")
    print(f"   üì± Chat ID: {HOLIDAYS_CHAT_ID}")
    print(f"   üßµ Thread ID: {HOLIDAYS_THREAD_ID}")
    print(f"   üëÆ –ê–¥–º–∏–Ω—ã: {HOLIDAYS_ADMIN_IDS}")
    print(f"   ü§ñ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {len(mock_bot.handlers)}")
    
    # –ù–∞—Ö–æ–¥–∏–º –Ω—É–∂–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    command_handlers = {}
    debug_handler = None
    
    for handler_type, handler_func, handler_kwargs in mock_bot.handlers:
        if handler_type == 'message':
            if 'commands' in handler_kwargs:
                for cmd in handler_kwargs['commands']:
                    command_handlers[cmd] = handler_func
            elif 'func' in handler_kwargs:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ debug-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫
                test_msg = MockMessage(HOLIDAYS_CHAT_ID, 999, "test")
                if handler_kwargs['func'](test_msg):
                    debug_handler = handler_func
    
    print(f"\nüîß –ù–∞–π–¥–µ–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏:")
    print(f"   üìã –ö–æ–º–∞–Ω–¥—ã: {list(command_handlers.keys())}")
    print(f"   üêõ Debug-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫: {'‚úÖ' if debug_handler else '‚ùå'}")
    
    # –°—Ü–µ–Ω–∞—Ä–∏–π 1: –°–æ–æ–±—â–µ–Ω–∏–µ –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —á–∞—Ç–µ
    print(f"\n" + "="*60)
    print(f"üìù –°–¶–ï–ù–ê–†–ò–ô 1: –°–æ–æ–±—â–µ–Ω–∏–µ –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —á–∞—Ç–µ")
    print(f"="*60)
    
    wrong_chat_msg = MockMessage(-123456789, None, "–ü—Ä–∏–≤–µ—Ç, –±–æ—Ç!", 12345, "user1", "–ò–≤–∞–Ω", "–ü–µ—Ç—Ä–æ–≤")
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤ –ø–∏—à–µ—Ç –≤ —á–∞—Ç–µ {wrong_chat_msg.chat.id}: '{wrong_chat_msg.text}'")
    
    # Debug-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –¥–æ–ª–∂–µ–Ω —Å—Ä–∞–±–æ—Ç–∞—Ç—å
    if debug_handler:
        test_result = any(h[2]['func'](wrong_chat_msg) for h in mock_bot.handlers if h[0] == 'message' and 'func' in h[2])
        if not test_result:
            print("‚úÖ Debug-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –¥—Ä—É–≥–∏—Ö —á–∞—Ç–æ–≤")
    
    # –°—Ü–µ–Ω–∞—Ä–∏–π 2: –°–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —á–∞—Ç–µ, –Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ç–æ–ø–∏–∫–µ
    print(f"\n" + "="*60)
    print(f"üìù –°–¶–ï–ù–ê–†–ò–ô 2: –°–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —á–∞—Ç–µ, –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ç–æ–ø–∏–∫–µ")
    print(f"="*60)
    
    wrong_thread_msg = MockMessage(HOLIDAYS_CHAT_ID, 999, "–ü—Ä–∏–≤–µ—Ç –∏–∑ –¥—Ä—É–≥–æ–≥–æ —Ç–æ–ø–∏–∫–∞!", 12345, "user1", "–ò–≤–∞–Ω", "–ü–µ—Ç—Ä–æ–≤")
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤ –ø–∏—à–µ—Ç –≤ —á–∞—Ç–µ {HOLIDAYS_CHAT_ID}, —Ç–æ–ø–∏–∫–µ 999: '{wrong_thread_msg.text}'")
    
    if debug_handler:
        debug_handler(wrong_thread_msg)
        print("‚úÖ Debug-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–∏–ª —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π")
    
    # –°—Ü–µ–Ω–∞—Ä–∏–π 3: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —á–∞—Ç–µ –∏ —Ç–æ–ø–∏–∫–µ
    print(f"\n" + "="*60)
    print(f"üìù –°–¶–ï–ù–ê–†–ò–ô 3: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ /–≤—ã—Ö–æ–¥–Ω–æ–π")
    print(f"="*60)
    
    holiday_msg = MockMessage(HOLIDAYS_CHAT_ID, HOLIDAYS_THREAD_ID, "/–≤—ã—Ö–æ–¥–Ω–æ–π 2024-12-31 —Å–µ–º–µ–π–Ω—ã–µ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞", 12345, "user1", "–ò–≤–∞–Ω", "–ü–µ—Ç—Ä–æ–≤")
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤ –ø–∏—à–µ—Ç –∫–æ–º–∞–Ω–¥—É: '{holiday_msg.text}'")
    
    if '–≤—ã—Ö–æ–¥–Ω–æ–π' in command_handlers:
        command_handlers['–≤—ã—Ö–æ–¥–Ω–æ–π'](holiday_msg)
        print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ /–≤—ã—Ö–æ–¥–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞")
    
    # –°—Ü–µ–Ω–∞—Ä–∏–π 4: –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö
    print(f"\n" + "="*60)
    print(f"üìù –°–¶–ï–ù–ê–†–ò–ô 4: –ö–æ–º–∞–Ω–¥–∞ /–≤—ã—Ö (–ø—Ä–æ—Å–º–æ—Ç—Ä –±—É–¥—É—â–∏—Ö –≤—ã—Ö–æ–¥–Ω—ã—Ö)")
    print(f"="*60)
    
    future_msg = MockMessage(HOLIDAYS_CHAT_ID, HOLIDAYS_THREAD_ID, "/–≤—ã—Ö", 12345, "user1", "–ò–≤–∞–Ω", "–ü–µ—Ç—Ä–æ–≤")
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤ –ø–∏—à–µ—Ç –∫–æ–º–∞–Ω–¥—É: '{future_msg.text}'")
    
    if '–≤—ã—Ö' in command_handlers:
        command_handlers['–≤—ã—Ö'](future_msg)
        print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ /–≤—ã—Ö –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞")
    
    # –°—Ü–µ–Ω–∞—Ä–∏–π 5: –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –≤—ã—Ö–æ–¥–Ω—ã—Ö
    print(f"\n" + "="*60)
    print(f"üìù –°–¶–ï–ù–ê–†–ò–ô 5: –ö–æ–º–∞–Ω–¥–∞ /–≤—Å–µ–≤—ã—Ö (–≤—Å–µ –≤—ã—Ö–æ–¥–Ω—ã–µ)")
    print(f"="*60)
    
    all_msg = MockMessage(HOLIDAYS_CHAT_ID, HOLIDAYS_THREAD_ID, "/–≤—Å–µ–≤—ã—Ö", 12345, "user1", "–ò–≤–∞–Ω", "–ü–µ—Ç—Ä–æ–≤")
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤ –ø–∏—à–µ—Ç –∫–æ–º–∞–Ω–¥—É: '{all_msg.text}'")
    
    if '–≤—Å–µ–≤—ã—Ö' in command_handlers:
        command_handlers['–≤—Å–µ–≤—ã—Ö'](all_msg)
        print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ /–≤—Å–µ–≤—ã—Ö –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞")
    
    # –ò—Ç–æ–≥–∏
    print(f"\n" + "="*60)
    print(f"üìä –ò–¢–û–ì–ò –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò")
    print(f"="*60)
    print(f"   üì® –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –±–æ—Ç–æ–º: {len(mock_bot.sent_messages)}")
    print(f"   üîß Debug-—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: {'–ê–∫—Ç–∏–≤–Ω–∞' if debug_handler else '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞'}")
    print(f"   üìã –ö–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã: {', '.join(command_handlers.keys())}")
    print(f"   ‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —á–∞—Ç—É/—Ç–æ–ø–∏–∫—É: –†–∞–±–æ—Ç–∞–µ—Ç")
    print(f"   üìù –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: –í–∫–ª—é—á–µ–Ω–æ")
    
    print(f"\nüéØ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ production —Å debug-–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏!")
    print(f"üí° –î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è debug-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —É–¥–∞–ª–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ –∏–∑ register_holiday_handlers()")

def main():
    """–ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    try:
        demo_holiday_bot()
        print(f"\nüéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        return 0
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return 1

if __name__ == "__main__":
    exit(main())