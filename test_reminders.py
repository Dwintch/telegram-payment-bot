#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏.
–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–π –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
"""

import random
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# –ò–º–ø–æ—Ä—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Ñ—É–Ω–∫—Ü–∏–π –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞
try:
    from bot import (
        MOTIVATIONAL_MESSAGES, 
        DELIVERY_REMINDERS, 
        get_random_message_with_no_repeat,
        last_motivational_message,
        last_delivery_message
    )
except ImportError as e:
    print(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∫–æ–ø–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π...")
    
    # –õ–æ–∫–∞–ª—å–Ω—ã–µ –∫–æ–ø–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    MOTIVATIONAL_MESSAGES = [
        "‚è∞ –ü–æ—Ä–∞ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑! –¢–æ–≤–∞—Ä—ã —Å–∞–º–∏ —Å–µ–±—è –Ω–µ –∑–∞–∫–∞–∂—É—Ç üòâ",
        "üõçÔ∏è –ü—Ä–æ–≤–µ—Ä—å –æ—Å—Ç–∞—Ç–∫–∏, –∏–Ω–∞—á–µ —Ç–æ–≤–∞—Ä —Å–±–µ–∂–∏—Ç! üèÉ‚Äç‚ôÇÔ∏è",
        "üì¶ –¢–≤–æ–π –º–∞–≥–∞–∑–∏–Ω –∂–¥—ë—Ç —Å–≤–µ–∂–∏–π –∑–∞–∫–∞–∑! üåü"
    ]
    
    DELIVERY_REMINDERS = [
        "üì¶ **–ù–ê–ü–û–ú–ò–ù–ê–ù–ò–ï:** –ù–µ –∑–∞–±—É–¥—å—Ç–µ —Å–æ–±—Ä–∞—Ç—å –∑–∞–∫–∞–∑—ã –¥–æ 17:00!",
        "üöÄ **–ù–ê–ü–û–ú–ò–ù–ê–ù–ò–ï:** –ó–∞–∫–∞–∑—ã –∂–¥—É—Ç —Å–≤–æ–µ–≥–æ –≥–µ—Ä–æ—è!",
        "‚è∞ **–ù–ê–ü–û–ú–ò–ù–ê–ù–ò–ï:** –í—Ä–µ–º—è —Å–æ–±–∏—Ä–∞—Ç—å –ø–æ—Å—Ç–∞–≤–∫–∏!"
    ]
    
    last_motivational_message = None
    last_delivery_message = None
    
    def get_random_message_with_no_repeat(message_pool, last_message_var):
        """–õ–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
        if len(message_pool) <= 1:
            return message_pool[0] if message_pool else "–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
        
        available_messages = [msg for msg in message_pool if msg != last_message_var]
        
        if not available_messages:
            available_messages = message_pool
        
        return random.choice(available_messages)

def test_message_pools():
    """–¢–µ—Å—Ç –ø—É–ª–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–ª–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π...")
    
    print(f"üìù –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {len(MOTIVATIONAL_MESSAGES)}")
    print(f"üìù –°–æ–æ–±—â–µ–Ω–∏–π –æ –ø–æ—Å—Ç–∞–≤–∫–∞—Ö: {len(DELIVERY_REMINDERS)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –ø—É—Å—Ç—ã–µ
    assert len(MOTIVATIONAL_MESSAGES) > 0, "–ü—É–ª –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø—É—Å—Ç!"
    assert len(DELIVERY_REMINDERS) > 0, "–ü—É–ª —Å–æ–æ–±—â–µ–Ω–∏–π –æ –ø–æ—Å—Ç–∞–≤–∫–∞—Ö –ø—É—Å—Ç!"
    
    print("‚úÖ –ü—É–ª—ã —Å–æ–æ–±—â–µ–Ω–∏–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")

def test_no_repeat_logic():
    """–¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –∏–∑–±–µ–∂–∞–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–æ–≤"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –∏–∑–±–µ–∂–∞–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–æ–≤...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
    messages = []
    last_msg = None
    
    for i in range(10):
        msg = get_random_message_with_no_repeat(MOTIVATIONAL_MESSAGES, last_msg)
        messages.append(msg)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –ø–æ–¥—Ä—è–¥ (–µ—Å–ª–∏ –µ—Å—Ç—å –≤—ã–±–æ—Ä)
        if last_msg is not None and len(MOTIVATIONAL_MESSAGES) > 1:
            assert msg != last_msg, f"–ü–æ–≤—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω: '{msg}'"
        
        last_msg = msg
        
    print(f"‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ {len(messages)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏–π
    print("üìã –ü—Ä–∏–º–µ—Ä—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:")
    for i, msg in enumerate(messages[:5], 1):
        print(f"  {i}. {msg[:50]}...")

def test_delivery_reminders():
    """–¢–µ—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ –ø–æ—Å—Ç–∞–≤–∫–∞—Ö"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ –ø–æ—Å—Ç–∞–≤–∫–∞—Ö...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∞—Ç –º–µ—Ç–∫—É "–ù–ê–ü–û–ú–ò–ù–ê–ù–ò–ï"
    for msg in DELIVERY_REMINDERS:
        assert "–ù–ê–ü–û–ú–ò–ù–ê–ù–ò–ï" in msg, f"–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ—Ç–∫—É '–ù–ê–ü–û–ú–ò–ù–ê–ù–ò–ï': {msg}"
    
    print("‚úÖ –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ—Å—Ç–∞–≤–∫–∞—Ö —Å–æ–¥–µ—Ä–∂–∞—Ç –º–µ—Ç–∫—É '–ù–ê–ü–û–ú–ò–ù–ê–ù–ò–ï'")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
    print("üìã –ü—Ä–∏–º–µ—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏–π –æ –ø–æ—Å—Ç–∞–≤–∫–∞—Ö:")
    for i, msg in enumerate(DELIVERY_REMINDERS[:3], 1):
        print(f"  {i}. {msg[:60]}...")

def test_scheduler_time_ranges():
    """–¢–µ—Å—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤...")
    
    # –°–∏–º—É–ª—è—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—Ä–µ–º—ë–Ω –¥–ª—è –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
    # –£—Ç—Ä–æ: 10:00-12:00
    morning_times = []
    for _ in range(3):
        hour = random.randint(10, 11)
        minute = random.randint(0, 59)
        time_str = f"{hour:02d}:{minute:02d}"
        morning_times.append(time_str)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Ä–µ–º—è –≤ –Ω—É–∂–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ
        assert 10 <= hour <= 11, f"–£—Ç—Ä–µ–Ω–Ω–µ–µ –≤—Ä–µ–º—è –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞: {time_str}"
    
    # –í–µ—á–µ—Ä: 20:00-23:00
    evening_times = []
    for _ in range(3):
        hour = random.randint(20, 22)
        minute = random.randint(0, 59)
        time_str = f"{hour:02d}:{minute:02d}"
        evening_times.append(time_str)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Ä–µ–º—è –≤ –Ω—É–∂–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ
        assert 20 <= hour <= 22, f"–í–µ—á–µ—Ä–Ω–µ–µ –≤—Ä–µ–º—è –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞: {time_str}"
    
    print(f"‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤—Ä–µ–º–µ–Ω–∞ –¥–ª—è —É—Ç—Ä–∞: {morning_times}")
    print(f"‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤—Ä–µ–º–µ–Ω–∞ –¥–ª—è –≤–µ—á–µ—Ä–∞: {evening_times}")
    
    # –ü–æ—Å—Ç–∞–≤–∫–∏: 9:00-15:00
    delivery_times = []
    for _ in range(4):
        hour = random.randint(9, 14)
        minute = random.randint(0, 59)
        time_str = f"{hour:02d}:{minute:02d}"
        delivery_times.append(time_str)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Ä–µ–º—è –≤ –Ω—É–∂–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ
        assert 9 <= hour <= 14, f"–í—Ä–µ–º—è –ø–æ—Å—Ç–∞–≤–æ–∫ –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞: {time_str}"
    
    print(f"‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤—Ä–µ–º–µ–Ω–∞ –¥–ª—è –ø–æ—Å—Ç–∞–≤–æ–∫: {delivery_times}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π...")
    
    try:
        test_message_pools()
        test_no_repeat_logic()
        test_delivery_reminders()
        test_scheduler_time_ranges()
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("üìä –°–∏—Å—Ç–µ–º–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö: {e}")
        raise

if __name__ == "__main__":
    main()