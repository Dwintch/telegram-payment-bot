import os
import json
import logging
from datetime import datetime
from collections import defaultdict

import telebot
from telebot import types
from dotenv import load_dotenv
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# === –ó–ê–ì–†–£–ó–ö–ê .ENV ===
load_dotenv()

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID_FOR_REPORT = -1002826712980
THREAD_ID_FOR_REPORT = 3
THREAD_ID_FOR_ORDER = 4
GOOGLE_SHEET_NAME = '–û—Ç—á—ë—Ç—ã'
CREDENTIALS_FILE = 'credentials.json'

bot = telebot.TeleBot(BOT_TOKEN, parse_mode='HTML')
user_data = {}

# === GOOGLE SHEETS ===
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name(CREDENTIALS_FILE, scope)
client = gspread.authorize(creds)
sheet = client.open(GOOGLE_SHEET_NAME).sheet1

# === –ö–ù–û–ü–ö–ò ===
def get_main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("üí∞ –ü–µ—Ä–µ–≤–æ–¥", "üí∏ –í–æ–∑–≤—Ä–∞—Ç")
    markup.add("üìÑ –°–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç", "üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—É–º–º—É")
    markup.add("üõç –ó–∞–∫–∞–∑", "üì¶ –ü—Ä–∏–µ–º –ø–æ—Å—Ç–∞–≤–∫–∏")
    markup.add("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", "üîÅ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–∫–∞–∑")
    return markup

def get_shop_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–Ø–Ω—Ç–∞—Ä—å", "–•–∞–π–ø", "–ü–æ–ª–∫–∞")
    return markup

def get_confirm_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å", "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", "üóì –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É", "‚ùå –û—Ç–º–µ–Ω–∞")
    return markup

# === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï ===
def sanitize_input(text):
    return [item.strip() for item in text.split(',') if item.strip()]

# === –°–û–û–ë–©–ï–ù–ò–Ø ===
@bot.message_handler(func=lambda m: True)
def handle_any_message(message):
    chat_id = message.chat.id
    text = message.text.strip()

    if chat_id not in user_data:
        user_data[chat_id] = {
            "shop": None,
            "transfers": [],
            "mode": "add",
            "cash": 0,
            "terminal": 0,
            "stage": "choose_shop",
            "date": datetime.now().strftime("%d.%m.%Y"),
            "order_items": [],
            "pending_delivery": [],
            "last_order": []
        }
        bot.send_message(chat_id, "–ù—É —á—Ç–æ, –ø–æc—á–∏—Ç–∞–µ–º –∫–æ–ø–µ–µ—á–∫–∏! –í—ã–±–µ—Ä–∏ –º–∞–≥–∞–∑–∏–Ω:", reply_markup=get_shop_menu())
        return

    user = user_data[chat_id]

    if text in ["–Ø–Ω—Ç–∞—Ä—å", "–•–∞–π–ø", "–ü–æ–ª–∫–∞"]:
        user.update({"shop": text, "transfers": [], "order_items": [], "pending_delivery": [],
                     "mode": "add", "cash": 0, "terminal": 0, "stage": "main",
                     "date": datetime.now().strftime("%d.%m.%Y")})
        bot.send_message(chat_id, f"–í—ã–±—Ä–∞–Ω –º–∞–≥–∞–∑–∏–Ω: <b>{text}</b>", reply_markup=get_main_menu())

    elif text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
        user.update({"mode": "add", "cash": 0, "terminal": 0, "stage": "main"})
        bot.send_message(chat_id, "‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_main_menu())

    elif text == "üí∞ –ü–µ—Ä–µ–≤–æ–¥":
        user["mode"] = "add"
        user["stage"] = "amount_input"
        bot.send_message(chat_id, "–û–ø, –ª–∞–≤–µ—à–µ—á–∫–∞ –∫–∞–ø–Ω—É–ª–∞! –°–∫–æ–ª—å–∫–æ –ø—Ä–∏—à–ª–æ?:")

    elif text == "üí∏ –í–æ–∑–≤—Ä–∞—Ç":
        user["mode"] = "subtract"
        user["stage"] = "amount_input"
        bot.send_message(chat_id, "–°–º–µ—à–Ω–æ, –≤–æ–∑–≤—Ä–∞—Ç –Ω–∞ —Å—É–º–º—É:")

    elif text == "üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—É–º–º—É":
        total = sum(user["transfers"])
        count = len(user["transfers"])
        bot.send_message(chat_id, f"üìä –°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤: <b>{total}‚ÇΩ</b>\n–ö–æ–ª-–≤–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {count}")

    elif text == "üìÑ –°–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç":
        user["stage"] = "cash_input"
        total = sum(user["transfers"])
        bot.send_message(chat_id, f"üßæ –ü–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω–∞ —Å—É–º–º—É: <b>{total}‚ÇΩ</b>\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–∞–ª–∏—á–Ω—ã—Ö:")

    elif text == "üõç –ó–∞–∫–∞–∑":
        user["stage"] = "order_input"
        bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –∑–∞–∫–∞–∑ (—Ç–æ–≤–∞—Ä—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):")

    elif text == "üì¶ –ü—Ä–∏–µ–º –ø–æ—Å—Ç–∞–≤–∫–∏":
        if user["pending_delivery"]:
            items = "\n".join(f"‚Ä¢ {item}" for item in user["pending_delivery"])
            bot.send_message(chat_id, f"–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –ø—Ä–∏–µ—Ö–∞–ª–æ (–≤–≤–µ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):\n{items}")
            user["stage"] = "delivery_confirm"
        else:
            bot.send_message(chat_id, "–ù–µ—Ç –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –ø–æ—Å—Ç–∞–≤–∫—É.")

    elif text == "üîÅ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–∫–∞–∑":
        if user["last_order"]:
            user["order_items"].extend(user["last_order"])
            bot.send_message(chat_id, "üîÅ –ó–∞–∫–∞–∑ –ø–æ–≤—Ç–æ—Ä—ë–Ω.")
            for item in user["last_order"]:
                bot.send_message(chat_id, f"‚Ä¢ {item}")
        else:
            bot.send_message(chat_id, "–ù–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–∫–∞–∑–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–∞.")

    elif text == "‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å":
        send_report(chat_id)
        if user["order_items"]:
            send_order(chat_id)

    elif text == "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ":
        user["stage"] = "cash_input"
        bot.send_message(chat_id, "–°–∫–æ–ª—å–∫–æ –Ω–∞–ª–∏—á–Ω—ã—Ö?:")

    elif text == "üóì –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É":
        user["stage"] = "custom_date_input"
        bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –æ—Ç—á—ë—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì:")

    elif user["stage"] == "custom_date_input":
        try:
            custom_date = datetime.strptime(text, "%d.%m.%Y")
            user["date"] = custom_date.strftime("%d.%m.%Y")
            user["stage"] = "confirm_report"
            bot.send_message(chat_id, f"‚úÖ –î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: <b>{user['date']}</b>")
            preview_report(chat_id)
        except ValueError:
            bot.send_message(chat_id, "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –í–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì:")

    elif text.isdigit():
        amount = int(text)
        if user["stage"] in ["main", "amount_input"]:
            user["transfers"].append(-amount if user["mode"] == "subtract" else amount)
            bot.send_message(chat_id, f"{'‚ûñ –í–æ–∑–≤—Ä–∞—Ç' if user['mode']=='subtract' else '‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ'}: {amount}‚ÇΩ")
            total = sum(user["transfers"])
            bot.send_message(chat_id, f"üí∞ –¢–µ–∫—É—â–∞—è —Å—É–º–º–∞: <b>{total}‚ÇΩ</b>", reply_markup=get_main_menu())
            user["mode"] = "add"
            user["stage"] = "main"

        elif user["stage"] == "cash_input":
            user["cash"] = amount
            user["stage"] = "terminal_input"
            bot.send_message(chat_id, "–°–∫–æ–ª—å–∫–æ –ø–æ —Ç–µ—Ä–º–∏–Ω–∞–ª—É:")

        elif user["stage"] == "terminal_input":
            user["terminal"] = amount
            user["stage"] = "confirm_report"
            preview_report(chat_id)

    else:
        if user["stage"] == "order_input":
            items = sanitize_input(text)
            user["order_items"].extend(items)
            user["last_order"] = items[:]
            bot.send_message(chat_id, f"üõí –¢–æ–≤–∞—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –∑–∞–∫–∞–∑:")
            for item in items:
                bot.send_message(chat_id, f"‚Ä¢ {item}")

        elif user["stage"] == "delivery_confirm":
            arrived = sanitize_input(text)
            user["pending_delivery"] = [item for item in user["pending_delivery"] if item not in arrived]
            bot.send_message(chat_id, f"‚úÖ –ü—Ä–∏–Ω—è—Ç–æ: {'; '.join(arrived)}")
            if user["pending_delivery"]:
                bot.send_message(chat_id, f"‚è≠ –í —Å–ª–µ–¥—É—é—â—É—é –ø–æ—Å—Ç–∞–≤–∫—É –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ: {'; '.join(user['pending_delivery'])}")
            user["stage"] = "main"

        elif user["stage"] == "main":
            items = sanitize_input(text)
            user["order_items"].extend(items)
            bot.send_message(chat_id, "üõí –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∑–∞–∫–∞–∑:")
            for item in items:
                bot.send_message(chat_id, f"‚Ä¢ {item}")

# === –û–¢–ß–ï–¢ ===
def round_to_50(value):
    remainder = value % 50
    return int(value - remainder) if remainder < 25 else int(value + (50 - remainder))

def preview_report(chat_id):
    data = user_data[chat_id]
    transfers = sum(data["transfers"])
    total = transfers + data["cash"] + data["terminal"]
    if data["shop"] == "–Ø–Ω—Ç–∞—Ä—å":
        each = round_to_50((total * 0.10) / 2) if total >= 40000 else 2000
        salary = each * 2
        salary_text = f"üëî –ó–ü: {salary}‚ÇΩ\nüë§ –ü–æ {each}‚ÇΩ –∫–∞–∂–¥–æ–º—É"
    else:
        salary = max(2000, round_to_50(total * 0.10))
        salary_text = f"üëî –ó–ü: {salary}‚ÇΩ"
    report = (
        f"üì¶ –ú–∞–≥–∞–∑–∏–Ω: {data['shop']}\n"
        f"üìÖ –î–∞—Ç–∞: {data['date']}\n"
        f"üí≥ –ü–µ—Ä–µ–≤–æ–¥—ã: {transfers}‚ÇΩ\n"
        f"üíµ –ù–∞–ª–∏—á–Ω—ã–µ: {data['cash']}‚ÇΩ\n"
        f"üèß –¢–µ—Ä–º–∏–Ω–∞–ª: {data['terminal']}‚ÇΩ\n"
        f"üìä –ò—Ç–æ–≥–æ: {total}‚ÇΩ\n{salary_text}"
    )
    bot.send_message(chat_id, report, reply_markup=get_confirm_menu())

def send_report(chat_id):
    data = user_data[chat_id]
    row = [data["date"], data["shop"], sum(data["transfers"]), data["cash"], data["terminal"]]
    sheet.append_row(row)
    total = sum(data["transfers"]) + data["cash"] + data["terminal"]
    report = (
        f"üì¶ –ú–∞–≥–∞–∑–∏–Ω: {data['shop']}\n"
        f"üìÖ –î–∞—Ç–∞: {data['date']}\n"
        f"üí≥ –ü–µ—Ä–µ–≤–æ–¥—ã: {row[2]}‚ÇΩ\n"
        f"üíµ –ù–∞–ª–∏—á–Ω—ã–µ: {row[3]}‚ÇΩ\n"
        f"üèß –¢–µ—Ä–º–∏–Ω–∞–ª: {row[4]}‚ÇΩ\n"
        f"üìä –ò—Ç–æ–≥–æ: {total}‚ÇΩ"
    )
    bot.send_message(CHAT_ID_FOR_REPORT, report, message_thread_id=THREAD_ID_FOR_REPORT)
    user_data[chat_id] = {}
    bot.send_message(chat_id, "‚úÖ –û—Ç—á—ë—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –í—ã–±–µ—Ä–∏ –º–∞–≥–∞–∑–∏–Ω:", reply_markup=get_shop_menu())

def send_order(chat_id):
    items = user_data[chat_id]["order_items"]
    if items:
        formatted = "\n".join(f"‚Ä¢ {item}" for item in items)
        bot.send_message(CHAT_ID_FOR_REPORT, f"üõç –ù–æ–≤—ã–π –∑–∞–∫–∞–∑:\n{formatted}", message_thread_id=THREAD_ID_FOR_ORDER)
        user_data[chat_id]["pending_delivery"] = items
        user_data[chat_id]["order_items"] = []

# === –ó–ê–ü–£–°–ö ===
print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
bot.infinity_polling()
