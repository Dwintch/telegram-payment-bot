import os
import json
import logging
from datetime import datetime
from collections import defaultdict

import telebot
from telebot import types
from dotenv import load_dotenv
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# === –ó–ê–ì–†–£–ó–ö–ê .ENV ===
load_dotenv()

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID_FOR_REPORT = -1002826712980
THREAD_ID_FOR_REPORT = 3
GOOGLE_SHEET_NAME = '–û—Ç—á—ë—Ç—ã'
CREDENTIALS_FILE = 'credentials.json'

bot = telebot.TeleBot(BOT_TOKEN)
user_data = {}

# === GOOGLE SHEETS ===
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name(CREDENTIALS_FILE, scope)
client = gspread.authorize(creds)
sheet = client.open(GOOGLE_SHEET_NAME).sheet1

# === –ö–ù–û–ü–ö–ò ===
def get_main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("üí∞ –ü–µ—Ä–µ–≤–æ–¥", "üí∏ –í–æ–∑–≤—Ä–∞—Ç")
    markup.add("üìÑ –°–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç", "üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—É–º–º—É")
    markup.add("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
    return markup

def get_shop_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–Ø–Ω—Ç–∞—Ä—å", "–•–∞–π–ø", "–ü–æ–ª–∫–∞")
    return markup

def get_confirm_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å", "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", "üóì –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É", "‚ùå –û—Ç–º–µ–Ω–∞")
    return markup

# === START ===
@bot.message_handler(func=lambda m: True)
def handle_any_message(message):
    chat_id = message.chat.id
    if chat_id not in user_data:
        user_data[chat_id] = {
            "shop": None,
            "transfers": [],
            "mode": "add",
            "cash": 0,
            "terminal": 0,
            "stage": "choose_shop",
            "date": datetime.now().strftime("%d.%m.%Y")
        }
        bot.send_message(chat_id, "–ù—É —á—Ç–æ –ø–æ —Å—á–∏—Ç–∞–µ–º –∫–æ–ø–µ–µ—á–∫–∏! –í—ã–±–µ—Ä–∏ –º–∞–≥–∞–∑–∏–Ω:", reply_markup=get_shop_menu())
        return

    text = message.text
    if text in ["–Ø–Ω—Ç–∞—Ä—å", "–•–∞–π–ø", "–ü–æ–ª–∫–∞"]:
        user_data[chat_id].update({
            "shop": text,
            "transfers": [],
            "mode": "add",
            "cash": 0,
            "terminal": 0,
            "stage": "main",
            "date": datetime.now().strftime("%d.%m.%Y")
        })
        bot.send_message(chat_id, f"–í—ã–±—Ä–∞–Ω –º–∞–≥–∞–∑–∏–Ω: {text}", reply_markup=get_main_menu())
    elif text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
        if user_data.get(chat_id, {}).get("shop"):
            user_data[chat_id].update({
                "mode": "add",
                "cash": 0,
                "terminal": 0,
                "stage": "main",
                "date": datetime.now().strftime("%d.%m.%Y")
            })
            bot.send_message(chat_id, "‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_main_menu())
        else:
            bot.send_message(chat_id, "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –º–∞–≥–∞–∑–∏–Ω:", reply_markup=get_shop_menu())
    elif text == "üí∞ –ü–µ—Ä–µ–≤–æ–¥":
        user_data[chat_id]["mode"] = "add"
        user_data[chat_id]["stage"] = "amount_input"
        bot.send_message(chat_id, "–û–ø –µ—â–µ –ª–∞–≤–µ—à–µ—á–∫–∞ –∫–∞–ø–Ω—É–ª–∞! –°–∫–æ–ª—å–∫–æ –ø—Ä–∏—à–ª–æ?:")
    elif text == "üí∏ –í–æ–∑–≤—Ä–∞—Ç":
        user_data[chat_id]["mode"] = "subtract"
        user_data[chat_id]["stage"] = "amount_input"
        bot.send_message(chat_id, "–°–º–µ—à–Ω–æ, –≤–æ–∑–≤–∞—Ç –Ω–∞ —Å—É–º–º—É:")
    elif text == "üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—É–º–º—É":
        total = sum(user_data.get(chat_id, {}).get("transfers", []))
        count = len(user_data.get(chat_id, {}).get("transfers", []))
        bot.send_message(chat_id, f"üìä –°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤: {total}‚ÇΩ\n–ö–æ–ª-–≤–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {count}")
    elif text == "üìÑ –°–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç":
        total = sum(user_data[chat_id]["transfers"])
        user_data[chat_id]["stage"] = "cash_input"
        bot.send_message(chat_id, f"üßæ –ü–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω–∞ —Å—É–º–º—É: {total}‚ÇΩ\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–∞–ª–∏—á–Ω—ã—Ö:")
    elif text == "‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å":
        send_report(chat_id)
    elif text == "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ":
        user_data[chat_id]["stage"] = "cash_input"
        bot.send_message(chat_id, "–°–∫–æ–ª—å–∫–æ –Ω–∞–ª–∏—á–Ω—ã—Ö?:")
    elif text == "üóì –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É":
        user_data[chat_id]["stage"] = "custom_date_input"
        bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –æ—Ç—á—ë—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì:")
    elif user_data[chat_id].get("stage") == "custom_date_input":
        try:
            custom_date = datetime.strptime(text, "%d.%m.%Y")
            user_data[chat_id]["date"] = custom_date.strftime("%d.%m.%Y")
            user_data[chat_id]["stage"] = "confirm_report"
            bot.send_message(chat_id, f"‚úÖ –î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: {user_data[chat_id]['date']}")
            preview_report(chat_id)
        except ValueError:
            bot.send_message(chat_id, "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –í–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì:")
    elif text.isdigit():
        stage = user_data.get(chat_id, {}).get("stage", "main")
        mode = user_data[chat_id].get("mode", "add")
        amount = int(text)

        if stage in ["main", "amount_input"]:
            if mode == "subtract":
                user_data[chat_id]["transfers"].append(-amount)
                bot.send_message(chat_id, f"‚ûñ –í–æ–∑–≤—Ä–∞—Ç: {amount}‚ÇΩ")
            else:
                user_data[chat_id]["transfers"].append(amount)
                bot.send_message(chat_id, f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: {amount}‚ÇΩ")

            total = sum(user_data[chat_id]["transfers"])
            bot.send_message(chat_id, f"üí∞ –¢–µ–∫—É—â–∞—è —Å—É–º–º–∞: {total}‚ÇΩ", reply_markup=get_main_menu())
            user_data[chat_id]["mode"] = "add"
            user_data[chat_id]["stage"] = "main"

        elif stage == "cash_input":
            user_data[chat_id]["cash"] = amount
            user_data[chat_id]["stage"] = "terminal_input"
            bot.send_message(chat_id, "–°–∫–æ–ª—å–∫–æ –∫–∞–ø–Ω—É–ª–æ –ø–æ —Ç–µ—Ä–º–∏–Ω–∞–ª—É:")

        elif stage == "terminal_input":
            user_data[chat_id]["terminal"] = amount
            user_data[chat_id]["stage"] = "confirm_report"
            preview_report(chat_id)
    else:
        if user_data[chat_id].get("stage") == "main":
            items = [item.strip() for item in text.split(',') if item.strip()]
            formatted_items = "\n".join(f"‚Ä¢ {item}" for item in items)
            bot.send_message(chat_id, f"üõí –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∑–∞–∫–∞–∑:\n{formatted_items}")
        else:
            bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_main_menu())

# === –ü–†–ï–î–ü–†–û–°–ú–û–¢–† –û–¢–ß–ï–¢–ê ===
def round_to_50(value):
    remainder = value % 50
    return int(value - remainder) if remainder < 25 else int(value + (50 - remainder))

def preview_report(chat_id):
    data = user_data[chat_id]
    shop = data["shop"]
    transfers = sum(data["transfers"])
    cash = data["cash"]
    terminal = data["terminal"]
    total = transfers + cash + terminal
    date = data["date"]

    if shop == "–Ø–Ω—Ç–∞—Ä—å":
        if total < 40000:
            salary = 4000
        else:
            each = round_to_50((total * 0.10) / 2)
            salary = each * 2
        salary_text = f"üëî –ó–ü: {salary}‚ÇΩ\nüë§ –ü–æ {each}‚ÇΩ –∫–∞–∂–¥–æ–º—É"
    else:
        salary = max(2000, round_to_50(total * 0.10))
        salary_text = f"üëî –ó–ü: {salary}‚ÇΩ"

    report_text = (
        f"üì¶ –ú–∞–≥–∞–∑–∏–Ω: {shop}\n"
        f"üìÖ –î–∞—Ç–∞: {date}\n"
        f"üí≥ –ü–µ—Ä–µ–≤–æ–¥—ã: {transfers}‚ÇΩ\n"
        f"üíµ –ù–∞–ª–∏—á–Ω—ã–µ: {cash}‚ÇΩ\n"
        f"üèß –¢–µ—Ä–º–∏–Ω–∞–ª: {terminal}‚ÇΩ\n"
        f"üìä –ò—Ç–æ–≥–æ: {total}‚ÇΩ\n"
        f"{salary_text}"
    )

    bot.send_message(chat_id, report_text, reply_markup=get_confirm_menu())

# === –û–¢–ü–†–ê–í–ö–ê –û–¢–ß–ï–¢–ê ===
def send_report(chat_id):
    data = user_data[chat_id]
    shop = data["shop"]
    transfers = sum(data["transfers"])
    cash = data["cash"]
    terminal = data["terminal"]
    date = data["date"]

    report_text = (
        f"üì¶ –ú–∞–≥–∞–∑–∏–Ω: {shop}\n"
        f"üìÖ –î–∞—Ç–∞: {date}\n"
        f"üí≥ –ü–µ—Ä–µ–≤–æ–¥—ã: {transfers}‚ÇΩ\n"
        f"üíµ –ù–∞–ª–∏—á–Ω—ã–µ: {cash}‚ÇΩ\n"
        f"üèß –¢–µ—Ä–º–∏–Ω–∞–ª: {terminal}‚ÇΩ\n"
        f"üìä –ò—Ç–æ–≥–æ: {transfers + cash + terminal}‚ÇΩ"
    )

    sheet.append_row([date, shop, transfers, cash, terminal])
    bot.send_message(CHAT_ID_FOR_REPORT, report_text, message_thread_id=THREAD_ID_FOR_REPORT)
    bot.send_message(chat_id, "‚úÖ –û—Ç—á—ë—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –í—ã–±–µ—Ä–∏ –º–∞–≥–∞–∑–∏–Ω:", reply_markup=get_shop_menu())
    user_data[chat_id] = {}

# === –ó–ê–ü–£–°–ö ===
print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
bot.infinity_polling()
